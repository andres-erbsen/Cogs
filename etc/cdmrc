# /etc/cdmrc

# Set CDM theme and dialog options
theme=cdm
countfrom=1

# Window managers: commands and human-readable names
wmbinlist=(xmonad)
wmdisplist=(Xmonad)

# Allow console login?
allowconsole=yes

# Shutdown and reboot
allowshutdown=yes
shutdowncommand='sudo shutdown now'
rebootcommand='sudo reboot'

# Suspend and hibernate (needs pm-utils)
allowsuspend=no
suspendcommand='sudo pm-suspend'
allowhibernate=no
hibernatecommand='sudo pm-hibernate'

# X is started with: exec /usr/bin/X :$display $serverargs vt$((xtty+display))
serverargs="-nolisten tcp -dpi 96"
display=0 # Default display
xtty=7 # First X tty be spawned?
locktty=no # Can be used to lock a user to a tty (see example cdmrc)

consolekit=no # Use consolekit
consolekittime=30 # Wait for X session to register with consoleKit

# Enable login shell (fixes issues with some keymaps, uses bash).
# Note that your bash scripts won't have any terminal as stdin when
# started in this way. This may break some commands, including stty,
# unless you explicitly check for [ -t 0 ] or that every login shell
# is also interactive. However, we're sending stdout and stderr to
# /dev/null, so you won't see the complaints.
loginshell=no

# Additional arguments to pass to X server
# When usexinit=yes, we use ~/.xinitrc when it exists or /etc/X11/xinit/xinitrc
# when it doesn't. These are passed the chosen window manager as $1; note that
# the stock /etc/X11/xinit/xinitrc ignores this and always starts twm and three
# xterms. Your custom xinitrc should start the window manager supplied as $1
# instead. There is a sample xinitrc included at /usr/share/cdm/xinitrc.skel.
# If usexinit=no, then we instead call the chosen window manager directly.
usexinit=yes
